@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities

<hr />
<div>
    SubNavTest:  <br />
    <button type="button" class="btn btn-primary" @onclick="TestSubRouter1">Test Sub Router 1</button> <br />
    <button type="button" class="btn btn-primary" @onclick="TestSubRouterQueryString">Test Sub Router QueryString</button> <br />
</div>
<div>
    <ul>
        <li>chartId: @ChartId</li>
        <li>action: @Action</li>
    </ul>
</div>
<hr />

@code
{
    [Parameter]
    public int ChartId { get; set; }

    [Parameter]
    public string Action { get; set; }

    protected override Task OnParametersSetAsync()
    {
        Console.WriteLine($"SubNavTest OnParametersSetAsync: {ChartId} | {Action}");
        return base.OnParametersSetAsync();
    }

    private async Task TestSubRouter1()
    {
        var action = Action == "edit" ? "details" : "edit";
        NavigationManager.NavigateTo($"charts/{ChartId}/{action}");
    }

    private void TestSubRouterQueryString()
    {
        // https://www.mikesdotnetting.com/article/340/working-with-query-strings-in-blazor
        var query = new Dictionary<string, string>
    {
            {"wusel", "dusel"},
            {"hans", "wurst"}
        };
        NavigationManager.NavigateTo(QueryHelpers.AddQueryString(NavigationManager.Uri, query));
    }



}
